import ts from 'typescript';
interface Script {
    filename: string;
    content: string;
    attributes: {
        lang?: string;
    };
}
export declare const defaultCompilerOptions: ts.CompilerOptions;
export interface Env {
    basePath: string;
    formatDiagnosticHost: ts.FormatDiagnosticsHost;
}
export declare function createEnv(basePath?: string): Env;
export declare function readConfigFile(env: Env, path?: string): ts.CompilerOptions;
export interface PreprocessOptions {
    compilerOptions: ts.CompilerOptions;
    env: Env;
}
export declare function createPreprocessOptions(opts?: Partial<PreprocessOptions>): PreprocessOptions;
export declare function preprocess(opts?: Partial<PreprocessOptions>): {
    script: ({ content, attributes, filename }: Script) => {
        code: string;
    } | undefined;
};
export {};
